---
- hosts: dev
  become: true
  remote_user: ubuntu
  tasks:
    - name: Install required system packages
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
      when: ansible_os_family == "Debian"

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker CE
      apt:
        name: docker-ce
        update_cache: yes
        state: latest

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install pip for Python3
      apt:
        name: python3-pip
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Docker SDK for Python using pip
      pip:
        name: docker

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}"
        dest: "/usr/local/bin/docker-compose"
        mode: 'u+x,g+x'  # This sets the execute permissions for the user and group
      vars:
        docker_compose_version: "v2.23.0" 

    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: docker_compose_version_output

    - name: Output Docker Compose version
      debug:
        var: docker_compose_version_output.stdout_lines